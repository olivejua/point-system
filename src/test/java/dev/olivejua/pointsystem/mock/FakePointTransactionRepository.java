package dev.olivejua.pointsystem.mock;

import dev.olivejua.pointsystem.point.domain.PointAccrualType;
import dev.olivejua.pointsystem.point.domain.PointTransaction;
import dev.olivejua.pointsystem.point.service.port.PointTransactionRepository;

import java.util.ArrayList;
import java.util.List;
import java.util.concurrent.atomic.AtomicLong;

public class FakePointTransactionRepository implements PointTransactionRepository {
    private final AtomicLong autoGeneratedId = new AtomicLong(0);
    private final List<PointTransaction> data = new ArrayList<>();

    @Override
    public PointTransaction save(PointTransaction pointTransaction) {
        if (pointTransaction.getId() == null || pointTransaction.getId() == 0) {
            PointTransaction newPointTransaction = PointTransaction.builder()
                    .id(autoGeneratedId.incrementAndGet())
                    .user(pointTransaction.getUser())
                    .type(pointTransaction.getType())
                    .accrualType(pointTransaction.getAccrualType())
                    .order(pointTransaction.getOrder())
                    .amount(pointTransaction.getAmount())
                    .createdAt(pointTransaction.getCreatedAt())
                    .build();

            data.add(newPointTransaction);
            return newPointTransaction;
        } else {
            data.removeIf(item -> pointTransaction.getId().equals(item.getId()));
            data.add(pointTransaction);
            return pointTransaction;
        }
    }

    @Override
    public boolean existsByUserIdAndAccrualType(Long userId, PointAccrualType accrualType) {
        return data.stream()
                .anyMatch(item -> item.getUser().getId().equals(userId) && item.getAccrualType() == accrualType);
    }

    @Override
    public boolean existsByUserIdAndAccrualTypeAndCreatedAtBetween(Long userId, PointAccrualType accrualType, long startMillis, long endMillis) {
        return data.stream()
                .anyMatch(item -> item.getUser().getId().equals(userId)
                        && item.getAccrualType() == accrualType
                        && item.getCreatedAt() >= startMillis
                        && item.getCreatedAt() <= endMillis
                );
    }

}
