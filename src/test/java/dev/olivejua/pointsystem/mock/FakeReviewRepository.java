package dev.olivejua.pointsystem.mock;

import dev.olivejua.pointsystem.review.domain.Review;
import dev.olivejua.pointsystem.review.service.port.ReviewRepository;

import java.util.ArrayList;
import java.util.List;
import java.util.concurrent.atomic.AtomicLong;

public class FakeReviewRepository implements ReviewRepository {
    private final AtomicLong autoGeneratedId = new AtomicLong(0);
    private final List<Review> data = new ArrayList<>();

    @Override
    public boolean existsByOrderIdAndWriterId(long orderId, long writerId) {
        return data.stream()
                .anyMatch(item -> item.getOrder().getId().equals(orderId)
                        && item.getWriter().getId().equals(writerId));
    }

    @Override
    public Review save(Review review) {
        if (review.getId() == null || review.getId() == 0) {
            Review newReview = Review.builder()
                    .id(autoGeneratedId.incrementAndGet())
                    .order(review.getOrder())
                    .writer(review.getWriter())
                    .title(review.getTitle())
                    .content(review.getContent())
                    .createdAt(review.getCreatedAt())
                    .modifiedAt(review.getModifiedAt())
                    .build();

            data.add(newReview);
            return newReview;
        } else {
            data.removeIf(item -> review.getId().equals(item.getId()));

            data.add(review);
            return review;
        }
    }
}
