package dev.olivejua.pointsystem.mock;

import dev.olivejua.pointsystem.product.domain.Product;
import dev.olivejua.pointsystem.product.service.port.ProductRepository;

import java.util.ArrayList;
import java.util.List;
import java.util.Optional;
import java.util.concurrent.atomic.AtomicLong;

public class FakeProductRepository implements ProductRepository {
    private final AtomicLong autoGeneratedId = new AtomicLong(0);
    private final List<Product> data = new ArrayList<>();

    @Override
    public Optional<Product> findById(long id) {
        return data.stream()
                .filter(product -> product.getId() == id)
                .findFirst();
    }

    @Override
    public Product save(Product product) {
        if (product.getId() == null || product.getId() == 0) {
            Product newProduct = Product.builder()
                    .id(autoGeneratedId.incrementAndGet())
                    .name(product.getName())
                    .price(product.getPrice())
                    .createdAt(product.getCreatedAt())
                    .build();

            data.add(newProduct);
            return newProduct;
        } else {
            data.removeIf(item -> product.getId().equals(item.getId()));
            data.add(product);
            return product;
        }
    }
}
