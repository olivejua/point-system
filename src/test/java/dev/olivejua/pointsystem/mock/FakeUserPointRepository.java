package dev.olivejua.pointsystem.mock;

import dev.olivejua.pointsystem.point.domain.UserPoint;
import dev.olivejua.pointsystem.point.service.port.UserPointRepository;

import java.util.ArrayList;
import java.util.List;
import java.util.Optional;
import java.util.concurrent.atomic.AtomicLong;

public class FakeUserPointRepository implements UserPointRepository {
    private final AtomicLong autoGeneratedId = new AtomicLong(0);
    private final List<UserPoint> data = new ArrayList<>();

    @Override
    public Optional<UserPoint> findByUserId(long userId) {
        return data.stream()
                .filter(item -> item.getUser().getId().equals(userId))
                .findAny();
    }

    @Override
    public UserPoint save(UserPoint userPoint) {
        if (userPoint.getId() == null || userPoint.getId() == 0) {
            UserPoint newUserPoint = UserPoint.builder()
                    .id(autoGeneratedId.incrementAndGet())
                    .user(userPoint.getUser())
                    .amount(userPoint.getAmount())
                    .createdAt(userPoint.getCreatedAt())
                    .modifiedAt(userPoint.getModifiedAt())
                    .build();

            data.add(newUserPoint);
            return newUserPoint;
        } else {
            data.removeIf(item -> userPoint.getId().equals(item.getId()));
            data.add(userPoint);
            return userPoint;
        }
    }


}
